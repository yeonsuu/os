Copying tests/userprog/rox-multichild into /tmp/g9DZDKTHR4.dsk...
Copying tests/userprog/child-rox into /tmp/g9DZDKTHR4.dsk...
Writing command line to /tmp/vXSL8ijIaz.dsk...
qemu -hda /tmp/vXSL8ijIaz.dsk -hdb /tmp/TgVfvn4VFh.dsk -hdc /tmp/g9DZDKTHR4.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
Pintos booting with 4,096 kB RAM...
374 pages available in kernel pool.
374 pages available in user pool.
Calibrating timer...  50,739,200 loops/s.
hd0:0: detected 137 sector (68 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 156 sector (78 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
Kernel PANIC at ../../devices/disk.c:436 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0xc0107276 0xc0104cee 0xc01046e3 0xc010c5fe 0xc010bade 0xc010b068 0xc010ada8 0xc0101745 0xc010191b 0x804a1a1 0x80480fc 0x8048233 0x804880c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 67 ticks
Thread: 0 idle ticks, 67 kernel ticks, 0 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 90 reads, 322 writes
hd1:0: 156 reads, 0 writes
Console: 1285 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
